{"version":3,"sources":["components/NavBar.js","components/Categories.js","redux/books/books.js","components/Book.js","components/Form.js","components/Books.js","App.js","redux/configureStore.js","index.js"],"names":["NavBar","className","exact","to","type","Categories","props","text","REMOVE_BOOK_SUCCESS","ADD_BOOK_SUCCESS","GET_BOOK_REQUEST","GET_BOOK_SUCCESS","GET_BOOK_FAILURE","getBookRequest","fetchBooks","dispatch","axios","get","then","response","books","Object","entries","data","map","book","id","title","category","author","payload","getBookSuccess","catch","error","errorMsg","message","getBookFailure","addBook","newBook","item_id","post","removeBook","fetch","method","body","JSON","stringify","headers","initialState","loading","booksReducer","state","action","filter","Book","useDispatch","onClick","Form","useState","setTitle","setCategory","name","value","onChange","e","target","placeholder","required","preventDefault","uuidv4","Books","allBooks","useSelector","booksStatus","useEffect","updateBooks","App","basename","process","path","reducers","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f5e1262.chunk.js","sourcesContent":["import React from 'react';\nimport { FaUser } from 'react-icons/fa';\nimport {\n  Link,\n} from 'react-router-dom';\nimport '../scss/style.scss';\n\nconst NavBar = () => (\n  <div className=\"Nav-Container\">\n    <h1>Bookstore CMS</h1>\n    <nav>\n      <ul className=\"Nav-Items\">\n        <li className=\"Nav-Item1\"><Link exact to=\"/\">BOOKS</Link></li>\n        <li className=\"Nav-Item2\"><Link to=\"/categories\">CATEGORIES</Link></li>\n      </ul>\n      <button className=\"user\" type=\"button\">\n        <FaUser className=\"userIcon\" />\n      </button>\n    </nav>\n  </div>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport '../scss/style.scss';\n\nconst Categories = (props) => {\n  const { text } = props;\n  return (\n    <div className=\"Categories-Container\">{text}</div>\n  );\n};\n\nCategories.propTypes = {\n  text: PropTypes.any,\n}.isRequired;\n\nexport default Categories;\n","/* eslint-disable camelcase */\nimport axios from 'axios';\n\nconst REMOVE_BOOK_SUCCESS = 'REMOVE_BOOK_SUCCESS';\nconst ADD_BOOK_SUCCESS = 'ADD_BOOK_SUCCESS';\nconst GET_BOOK_REQUEST = 'GET_BOOK_REQUEST';\nconst GET_BOOK_SUCCESS = 'GET_BOOK_SUCCESS';\nconst GET_BOOK_FAILURE = 'GET_BOOK_FAILURE';\n\nexport const getBookRequest = () => ({\n  type: GET_BOOK_REQUEST,\n});\n\nexport const getBookSuccess = (books) => ({\n  type: GET_BOOK_SUCCESS,\n  payload: books,\n});\n\nexport const getBookFailure = (error) => ({\n  type: GET_BOOK_FAILURE,\n  payload: error,\n});\n\nexport const addBookSuccess = (payload) => ({\n  type: ADD_BOOK_SUCCESS,\n  payload,\n});\n\nexport const removeBookSuccess = (payload) => ({\n  type: REMOVE_BOOK_SUCCESS,\n  payload,\n});\n\nexport const fetchBooks = () => (dispatch) => {\n  dispatch(getBookRequest);\n  axios.get('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/Cr80pbkuf1RrEQZCSqfj/books')\n    .then((response) => {\n      const books = Object.entries(response.data).map((book) => ({\n        id: book[0],\n        title: book[1][0].title,\n        category: book[1][0].category,\n        author: 'Jane Doe',\n      }));\n      dispatch(getBookSuccess(books));\n    })\n    .catch((error) => {\n      const errorMsg = error.message;\n      dispatch(getBookFailure(errorMsg));\n    });\n};\n\nexport const addBook = (newBook) => (dispatch) => {\n  const { item_id, category, title } = newBook;\n  axios.post('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/Cr80pbkuf1RrEQZCSqfj/books', {\n    item_id,\n    title,\n    category,\n  }).then(() => {\n    dispatch(addBookSuccess({\n      id: item_id,\n      title,\n      category,\n      author: 'Jane Doe',\n    }));\n  });\n};\n\nexport const removeBook = (id) => (dispatch) => {\n  fetch(`https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/Cr80pbkuf1RrEQZCSqfj/books/${id.id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({\n      item_id: id,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(() => {\n      dispatch(removeBookSuccess(id));\n    });\n};\n\nexport const initialState = {\n  loading: false,\n  books: [],\n  error: '',\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_BOOK_REQUEST:\n      return { ...state, loading: true };\n\n    case GET_BOOK_SUCCESS:\n      return {\n        ...state,\n        loading: true,\n        books: [...state.books, ...action.payload],\n        error: '',\n      };\n\n    case GET_BOOK_FAILURE:\n      return {\n        loading: false,\n        books: [],\n        error: action.payload,\n      };\n\n    case ADD_BOOK_SUCCESS:\n      return { ...state, books: [...state.books, action.payload] };\n\n    case REMOVE_BOOK_SUCCESS:\n      return {\n        ...state,\n        books: [...state.books.filter((book) => book.id !== action.payload.id)],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport '../scss/style.scss';\nimport { removeBook } from '../redux/books/books';\n\nconst Book = (props) => {\n  const { book } = props;\n\n  const {\n    id, category, title, author,\n  } = book;\n\n  const dispatch = useDispatch();\n\n  const removesBook = () => {\n    dispatch(\n      removeBook({\n        id,\n      }),\n    );\n  };\n\n  return (\n    <div className=\"Book-Container\">\n      <div className=\"Book-Info\">\n        <p className=\"Genre\">{category}</p>\n        <h3 className=\"Title\">{title}</h3>\n        <p className=\"Author\">{author}</p>\n        <div className=\"Book-Edits\">\n          <button type=\"button\" className=\"Edit-Item\">Comments</button>\n          <span className=\"Edit-Item\">|</span>\n          <button type=\"button\" className=\"Edit-Item Edit-Item2\" onClick={removesBook}>Remove</button>\n          <span className=\"Edit-Item\">|</span>\n          <button type=\"button\" className=\"Edit-Item\">Edit</button>\n        </div>\n      </div>\n      <div className=\"Book-Stats\">\n        <div className=\"Completion\">\n          <div className=\"Circle\" />\n          <div className=\"Book-Stats1\">\n            <p className=\"Percent\">100%</p>\n            <p className=\"Status\">Completed</p>\n          </div>\n        </div>\n        <span className=\"Partition\" />\n        <div className=\"Chapter-Stats\">\n          <p className=\"Current-Chapter\">CURRENT CHAPTER</p>\n          <p className=\"Chapter-Number\">Chapter 17</p>\n          <button className=\"Update-Progress\" type=\"button\">UPDATE PROGRESS</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  genre: PropTypes.any,\n  title: PropTypes.any,\n  author: PropTypes.any,\n}.isRequired;\n\nexport default Book;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../scss/style.scss';\nimport { addBook } from '../redux/books/books';\n\nconst Form = () => {\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('Drama');\n\n  const dispatch = useDispatch();\n\n  const titleChanged = (e) => setTitle(e.target.value);\n  const categoryChanged = (e) => setCategory(e.target.value);\n\n  const submitBookToStore = (e) => {\n    e.preventDefault();\n    if (title && category) {\n      dispatch(\n        addBook({\n          item_id: uuidv4(),\n          category,\n          title,\n        }),\n      );\n      setTitle('');\n      setCategory('Drama');\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <h2 className=\"Add-Title\">ADD NEW BOOK</h2>\n        <input className=\"Input1\" type=\"text\" name=\"title\" value={title} onChange={titleChanged} placeholder=\"Book Title\" required />\n        <select className=\"Input2\" name=\"category\" value={category} placeholder=\"Category\" onChange={categoryChanged} required>\n          <option value=\"Drama\">Drama</option>\n          <option value=\"Action\">Action</option>\n        </select>\n        <input className=\"Input3\" type=\"submit\" value=\"ADD BOOK\" onClick={submitBookToStore} />\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchBooks } from '../redux/books/books';\nimport Book from './Book';\nimport Form from './Form';\n\nconst Books = () => {\n  const allBooks = useSelector((state) => state.books.books);\n  const booksStatus = useSelector((state) => state.books.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (booksStatus === false) {\n      dispatch(fetchBooks());\n    }\n  }, []);\n\n  const updateBooks = allBooks.map((book) => <Book key={book.id} book={book} />);\n\n  return (\n    <div className=\"Main-Holder\">\n      <ul className=\"Books-Holder\">{updateBooks}</ul>\n      <div className=\"Border\" />\n      <Form />\n    </div>\n  );\n};\n\nexport default Books;\n","import React from 'react';\nimport {\n  Route, BrowserRouter as Router, Switch,\n} from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Categories from './components/Categories';\nimport Books from './components/Books';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <div className=\"App\">\n          <NavBar />\n          <Route path=\"/categories\"><Categories text=\"Under Construction.\" /></Route>\n          <Route path=\"/\" exact><Books /></Route>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport booksReducer from './books/books';\n\nconst reducers = combineReducers({\n  books: booksReducer,\n});\n\nconst store = createStore(reducers, applyMiddleware(logger, thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}